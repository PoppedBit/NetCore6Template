// <auto-generated />
using System;
using DotNetCore6Test.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DotNetCore6Test.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220828221821_FixCommentsTableName")]
    partial class FixCommentsTableName
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DotNetCore6Test.Entities.Auth.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("longblob");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f622f48a-a244-40cc-9efe-4efcaa067a96"),
                            Email = "test@test.com",
                            FirstName = "First",
                            IsAdmin = true,
                            LastName = "Last",
                            PasswordHash = new byte[] { 229, 46, 76, 123, 154, 84, 200, 24, 247, 183, 53, 199, 117, 109, 78, 190, 6, 62, 89, 120, 200, 137, 43, 213, 27, 4, 32, 207, 100, 211, 194, 94, 112, 132, 179, 172, 242, 190, 81, 170, 189, 12, 139, 31, 138, 128, 74, 60, 4, 142, 118, 119, 124, 30, 80, 246, 129, 137, 43, 251, 42, 230, 3, 51 },
                            PasswordSalt = new byte[] { 90, 69, 10, 126, 6, 62, 204, 191, 70, 46, 40, 169, 178, 108, 232, 170, 73, 0, 226, 127, 41, 166, 235, 102, 142, 28, 36, 110, 205, 183, 254, 255, 129, 116, 31, 205, 141, 98, 164, 163, 165, 208, 84, 50, 197, 154, 141, 226, 19, 96, 51, 79, 238, 196, 10, 148, 2, 42, 121, 111, 32, 116, 234, 200, 91, 4, 233, 142, 73, 89, 26, 27, 156, 88, 227, 0, 164, 98, 10, 150, 46, 202, 247, 178, 96, 246, 167, 240, 184, 94, 82, 183, 7, 6, 73, 102, 149, 231, 46, 113, 185, 156, 115, 244, 117, 179, 147, 196, 52, 56, 195, 36, 196, 33, 234, 167, 9, 159, 184, 185, 129, 94, 207, 21, 204, 155, 229, 252 },
                            Username = ""
                        });
                });

            modelBuilder.Entity("DotNetCore6Test.Entities.Auth.UserLogin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("LoginTimestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("DotNetCore6Test.Entities.Forum.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedTimestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PostId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("DotNetCore6Test.Entities.Forum.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedTimestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c412a9f1-d5ff-4ceb-a1a0-2e5d59c51a3b"),
                            AuthorId = new Guid("f622f48a-a244-40cc-9efe-4efcaa067a96"),
                            Body = "This is a test body",
                            CreatedTimestamp = new DateTime(2022, 8, 28, 22, 18, 21, 157, DateTimeKind.Utc).AddTicks(5575),
                            Link = "https://www.twitch.tv/",
                            Title = "This is a test title"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
