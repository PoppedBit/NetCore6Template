// <auto-generated />
using System;
using DotNetCore6Test.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DotNetCore6Test.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220828214111_SeedAPost")]
    partial class SeedAPost
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DotNetCore6Test.Entities.Auth.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("longblob");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5d35e99c-65cd-4c3c-ac27-833ca65db51d"),
                            Email = "test@test.com",
                            FirstName = "First",
                            IsAdmin = true,
                            LastName = "Last",
                            PasswordHash = new byte[] { 48, 171, 2, 61, 210, 50, 250, 44, 20, 103, 140, 148, 182, 127, 171, 99, 119, 151, 144, 200, 5, 140, 166, 43, 194, 96, 224, 173, 86, 12, 173, 127, 212, 176, 159, 16, 154, 40, 222, 178, 95, 5, 236, 112, 119, 52, 185, 38, 230, 193, 173, 88, 226, 157, 28, 154, 201, 191, 197, 238, 248, 0, 75, 231 },
                            PasswordSalt = new byte[] { 15, 109, 48, 158, 232, 160, 143, 7, 87, 234, 197, 99, 139, 255, 33, 235, 86, 209, 107, 81, 174, 85, 153, 36, 67, 78, 14, 109, 107, 149, 123, 111, 163, 41, 161, 103, 58, 63, 114, 179, 240, 215, 32, 183, 106, 155, 164, 111, 136, 92, 136, 13, 165, 187, 106, 222, 69, 16, 238, 166, 181, 128, 85, 231, 60, 62, 78, 219, 166, 67, 234, 114, 12, 218, 49, 138, 146, 126, 254, 253, 123, 205, 63, 183, 230, 81, 133, 18, 200, 31, 107, 237, 90, 255, 116, 3, 232, 142, 25, 16, 184, 4, 22, 20, 220, 200, 191, 139, 81, 209, 90, 147, 244, 95, 113, 93, 197, 9, 56, 172, 127, 172, 5, 169, 16, 31, 28, 135 },
                            Username = ""
                        });
                });

            modelBuilder.Entity("DotNetCore6Test.Entities.Auth.UserLogin", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("LoginTimestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("DotNetCore6Test.Entities.Forum.Comment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedTimestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("PostId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.ToTable("Comment");
                });

            modelBuilder.Entity("DotNetCore6Test.Entities.Forum.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedTimestamp")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8e6fff8a-d16a-43df-aeaa-74726b1d58b6"),
                            AuthorId = new Guid("5d35e99c-65cd-4c3c-ac27-833ca65db51d"),
                            Body = "This is a test body",
                            CreatedTimestamp = new DateTime(2022, 8, 28, 21, 41, 11, 740, DateTimeKind.Utc).AddTicks(387),
                            Link = "https://www.twitch.tv/",
                            Title = "This is a test title"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
